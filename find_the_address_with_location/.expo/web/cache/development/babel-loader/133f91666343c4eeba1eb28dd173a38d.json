{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mariiapyylampi/Desktop/Haaga-Helia AMK/Mobiiliohjelmointi/mobiiliohjelmointi1/find_the_address_with_location/App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport MapView, { Marker } from 'react-native-maps';\nexport default function App() {\n  var _useState = useState('Haaga-Helia'),\n      _useState2 = _slicedToArray(_useState, 2),\n      findtext = _useState2[0],\n      setFindtext = _useState2[1];\n\n  var _useState3 = useState({\n    latitude: 60.201373,\n    longitude: 24.934041\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var showLoc = function showLoc() {\n    console.log('button pressed');\n    var trim = findtext.replace(/\\s+/g, \"\");\n    var url = 'http://www.mapquestapi.com/geocoding/v1/address?key=jccOCdz0ooeoq31CY6Bz9kZlqDypypDQ&location=' + trim;\n    fetch(url).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      console.log('testi');\n      console.log(responseJson.results[0].locations[0].latLng);\n      console.log(responseJson.results[0].locations[0].latLng.lat);\n      var coords = {\n        latitude: responseJson.results[0].locations[0].latLng.lat,\n        longitude: responseJson.results[0].locations[0].latLng.lng\n      };\n      console.log(coords);\n      setData(coords);\n    }).catch(function (error) {\n      Alert.alert('Error', error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textinput,\n    placeholder: \"find place\",\n    value: findtext,\n    onChangeText: function onChangeText(findtext) {\n      return setFindtext(findtext);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"show\",\n    onPress: showLoc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), React.createElement(MapView, {\n    style: {\n      flex: 1,\n      width: '100%',\n      height: '100%'\n    },\n    region: {\n      latitude: data.latitude,\n      longitude: data.longitude,\n      latitudeDelta: 0.0322,\n      longitudeDelta: 0.0221\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(Marker, {\n    coordinate: data,\n    title: findtext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    marginTop: 30,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textinput: {\n    fontSize: 18,\n    width: 200\n  }\n});","map":{"version":3,"sources":["/Users/mariiapyylampi/Desktop/Haaga-Helia AMK/Mobiiliohjelmointi/mobiiliohjelmointi1/find_the_address_with_location/App.js"],"names":["StatusBar","React","useState","MapView","Marker","App","findtext","setFindtext","latitude","longitude","data","setData","showLoc","console","log","trim","replace","url","fetch","then","response","json","responseJson","results","locations","latLng","lat","coords","lng","catch","error","Alert","alert","styles","container","textinput","flex","width","height","latitudeDelta","longitudeDelta","StyleSheet","create","backgroundColor","marginTop","alignItems","justifyContent","fontSize"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAEA,OAAOC,OAAP,IAAkBC,MAAlB,QAAgC,mBAAhC;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACIH,QAAQ,CAAC,aAAD,CADZ;AAAA;AAAA,MACrBI,QADqB;AAAA,MACXC,WADW;;AAAA,mBAEJL,QAAQ,CAC9B;AACEM,IAAAA,QAAQ,EAAE,SADZ;AAEEC,IAAAA,SAAS,EAAE;AAFb,GAD8B,CAFJ;AAAA;AAAA,MAErBC,IAFqB;AAAA,MAEfC,OAFe;;AAS5B,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,QAAMC,IAAI,GAAGT,QAAQ,CAACU,OAAT,CAAiB,MAAjB,EAAyB,EAAzB,CAAb;AACA,QAAMC,GAAG,GAAG,mGAAmGF,IAA/G;AACAG,IAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACM,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADN,EAECF,IAFD,CAEM,UAACG,YAAD,EAAkB;AACtBT,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYQ,YAAY,CAACC,OAAb,CAAqB,CAArB,EAAwBC,SAAxB,CAAkC,CAAlC,EAAqCC,MAAjD;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYQ,YAAY,CAACC,OAAb,CAAqB,CAArB,EAAwBC,SAAxB,CAAkC,CAAlC,EAAqCC,MAArC,CAA4CC,GAAxD;AACA,UAAMC,MAAM,GAAG;AACbnB,QAAAA,QAAQ,EAAEc,YAAY,CAACC,OAAb,CAAqB,CAArB,EAAwBC,SAAxB,CAAkC,CAAlC,EAAqCC,MAArC,CAA4CC,GADzC;AAEbjB,QAAAA,SAAS,EAAEa,YAAY,CAACC,OAAb,CAAqB,CAArB,EAAwBC,SAAxB,CAAkC,CAAlC,EAAqCC,MAArC,CAA4CG;AAF1C,OAAf;AAIAf,MAAAA,OAAO,CAACC,GAAR,CAAYa,MAAZ;AACAhB,MAAAA,OAAO,CAACgB,MAAD,CAAP;AACD,KAZD,EAaCE,KAbD,CAaO,UAACC,KAAD,EAAW;AAChBC,MAAAA,KAAK,CAACC,KAAN,CAAY,OAAZ,EAAqBF,KAArB;AACD,KAfD;AAgBD,GApBD;;AAsBA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AACI,IAAA,KAAK,EAAED,MAAM,CAACE,SADlB;AAEI,IAAA,WAAW,EAAC,YAFhB;AAGI,IAAA,KAAK,EAAE7B,QAHX;AAII,IAAA,YAAY,EAAE,sBAACA,QAAD;AAAA,aAAcC,WAAW,CAACD,QAAD,CAAzB;AAAA,KAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,OAAO,EAAEM,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAE;AAACwB,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,KAAK,EAAE,MAAjB;AAAyBC,MAAAA,MAAM,EAAE;AAAjC,KADT;AAEE,IAAA,MAAM,EAAE;AACN9B,MAAAA,QAAQ,EAAEE,IAAI,CAACF,QADT;AAENC,MAAAA,SAAS,EAAEC,IAAI,CAACD,SAFV;AAGN8B,MAAAA,aAAa,EAAE,MAHT;AAINC,MAAAA,cAAc,EAAE;AAJV,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,MAAD;AACE,IAAA,UAAU,EAAE9B,IADd;AAEE,IAAA,KAAK,EAAEJ,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAVF,CADF;AA2BD;AAED,IAAM2B,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTE,IAAAA,IAAI,EAAE,CADG;AAETO,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,SAAS,EAAE,EAHF;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,cAAc,EAAE;AALP,GADoB;AAQ/BX,EAAAA,SAAS,EAAE;AACTY,IAAAA,QAAQ,EAAE,EADD;AAETV,IAAAA,KAAK,EAAE;AAFE;AARoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, View, Text, TextInput, Button, Alert} from 'react-native';\nimport MapView, { Marker } from 'react-native-maps';\n\nexport default function App() {\n  const [findtext, setFindtext] = useState('Haaga-Helia')\n  const [data, setData] = useState(\n    { \n      latitude: 60.201373, \n      longitude: 24.934041\n    })\n  \n\n  const showLoc = () => {\n    console.log('button pressed')\n    const trim = findtext.replace(/\\s+/g, \"\")\n    const url = 'http://www.mapquestapi.com/geocoding/v1/address?key=jccOCdz0ooeoq31CY6Bz9kZlqDypypDQ&location=' + trim\n    fetch(url)\n    .then((response) => response.json())\n    .then((responseJson) => {\n      console.log('testi')\n      console.log(responseJson.results[0].locations[0].latLng)\n      console.log(responseJson.results[0].locations[0].latLng.lat)\n      const coords = {\n        latitude: responseJson.results[0].locations[0].latLng.lat,\n        longitude: responseJson.results[0].locations[0].latLng.lng\n      }\n      console.log(coords)\n      setData(coords)\n    })\n    .catch((error) => {\n      Alert.alert('Error', error)\n    })\n  }\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      <TextInput\n          style={styles.textinput}\n          placeholder='find place'\n          value={findtext}\n          onChangeText={(findtext) => setFindtext(findtext)}\n         \n        />\n      <Button title='show' onPress={showLoc}></Button>\n      <MapView\n        style={{flex: 1, width: '100%', height: '100%'}}\n        region={{\n          latitude: data.latitude,\n          longitude: data.longitude,\n          latitudeDelta: 0.0322,\n          longitudeDelta: 0.0221,\n        }}\n      >\n          <Marker\n            coordinate={data}\n            title={findtext}\n          />\n        </MapView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    marginTop: 30,\n    alignItems: 'center',\n    justifyContent: 'center',\n  }, \n  textinput: {\n    fontSize: 18, \n    width: 200\n  }\n});\n"]},"metadata":{},"sourceType":"module"}